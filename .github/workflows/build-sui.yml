name: Build and Run Docker Containers

on:
  push:
    branches:
      - action/ci-cd

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get commit SHA
        id: vars
        run: echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build sui-node
        run: |
          chmod +x docker/sui-node/build.sh
          docker/sui-node/build.sh -t scalaris/consensus-node:${{ env.GIT_SHA }}
          docker save scalaris/consensus-node:${{ env.GIT_SHA }} -o scalaris_consensus_node_${{ env.GIT_SHA }}.tar

      - name: Build stress image
        run: |
          cd docker/stress
          docker build -t stress-testing:${{ env.GIT_SHA }} --build-arg SUI_TOOLS_IMAGE_TAG=mainnet-v1.19.1 .
          docker save stress-testing:${{ env.GIT_SHA }} -o ../../stress_testing_${{ env.GIT_SHA }}.tar

      - name: Build sui-network image
        run: |
          cd docker/sui-network
          docker build -t sui-network-latest:${{ env.GIT_SHA }} .
          docker save sui-network-latest:${{ env.GIT_SHA }} -o ../../sui_network_latest_${{ env.GIT_SHA }}.tar

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Create remote directory
        run: |
          sshpass -p ${{ secrets.REMOTE_PASSWORD }} ssh -o StrictHostKeyChecking=no -p ${{ secrets.REMOTE_PORT }} ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "mkdir -p /home/${{ secrets.REMOTE_USER }}/sui_${{ env.GIT_SHA }}"

      - name: Transfer sui-node image to remote host
        run: sshpass -p ${{ secrets.REMOTE_PASSWORD }} scp -o StrictHostKeyChecking=no -P ${{ secrets.REMOTE_PORT }} scalaris_consensus_node_${{ env.GIT_SHA }}.tar ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:/home/${{ secrets.REMOTE_USER }}/sui_${{ env.GIT_SHA }}/

      - name: Transfer stress image to remote host
        run: sshpass -p ${{ secrets.REMOTE_PASSWORD }} scp -o StrictHostKeyChecking=no -P ${{ secrets.REMOTE_PORT }} stress_testing_${{ env.GIT_SHA }}.tar ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:/home/${{ secrets.REMOTE_USER }}/sui_${{ env.GIT_SHA }}/

      - name: Transfer sui-network image to remote host
        run: sshpass -p ${{ secrets.REMOTE_PASSWORD }} scp -o StrictHostKeyChecking=no -P ${{ secrets.REMOTE_PORT }} sui_network_latest_${{ env.GIT_SHA }}.tar ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:/home/${{ secrets.REMOTE_USER }}/sui_${{ env.GIT_SHA }}/

      - name: Transfer sui-network files to remote host
        run: sshpass -p ${{ secrets.REMOTE_PASSWORD }} scp -o StrictHostKeyChecking=no -P ${{ secrets.REMOTE_PORT }} -r docker/sui-network ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:/home/${{ secrets.REMOTE_USER }}/sui_${{ env.GIT_SHA }}/

      - name: Load docker images and update docker-compose on remote host
        run: |
          sshpass -p ${{ secrets.REMOTE_PASSWORD }} ssh -o StrictHostKeyChecking=no -p ${{ secrets.REMOTE_PORT }} ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} << 'EOF'
            cd /home/${{ secrets.REMOTE_USER }}/sui_${{ env.GIT_SHA }}
            docker load -i scalaris_consensus_node_${{ env.GIT_SHA }}.tar
            docker load -i stress_testing_${{ env.GIT_SHA }}.tar
            docker load -i sui_network_latest_${{ env.GIT_SHA }}.tar
            cd /home/${{ secrets.REMOTE_USER }}/sui_${{ env.GIT_SHA }}/docker/sui-network
            sed -i 's/scalaris\/consensus-node/scalaris\/consensus-node:${{ env.GIT_SHA }}/g' docker-compose-scalaris.yaml
            sed -i 's/stress-testing/stress-testing:${{ env.GIT_SHA }}/g' docker-compose-scalaris.yaml
            sed -i 's/sui-network-latest/sui-network-latest:${{ env.GIT_SHA }}/g' docker-compose-scalaris.yaml
            sed -i 's/container_name:.*/container_name: scalaris_consensus_node_${{ env.GIT_SHA }}/' docker-compose-scalaris.yaml
            sed -i 's/container_name:.*/container_name: stress_testing_${{ env.GIT_SHA }}/' docker-compose-scalaris.yaml
            sed -i 's/container_name:.*/container_name: sui_network_latest_${{ env.GIT_SHA }}/' docker-compose-scalaris.yaml
            docker-compose -f docker-compose-scalaris.yaml up -d
          EOF
