/*
 *
 * Copyright 2018 gRPC authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

 syntax = "proto3";

 package consensus;

 // ScalarAbciRequest is the request for ScalarAbci.
 message ConsensusTransactionIn {
    bytes tx_bytes = 1;
    repeated string signatures = 2;
    
 }

 // ScalarAbciResponse is the response for ScalarAbci.
 message ConsensusTransactionOut {
   /*
    oneof message {
        RequestArk ark = 1;
        ScalarOutTransaction tran = 2;
        KeygenOutput keygen = 3;
    }
    */
    bytes payload = 1;
 }

 // Echo is the echo service.
 service ConsensusApi {
   // UnaryEcho is unary echo.
   // rpc UnaryScalarAbci(ScalarAbciRequest) returns (ScalarAbciResponse) {}
   // ServerStreamingEcho is server side streaming.
   // rpc ServerStreamingScalarAbci(ScalarAbciRequest) returns (stream ScalarAbciResponse) {}
   // ClientStreamingEcho is client side streaming.
   // rpc ClientStreamingScalarAbci(stream ScalarAbciRequest) returns (ScalarAbciResponse) {}
   // BidirectionalStreamingScalarAbci is bidi streaming.
   rpc InitTransaction(stream ConsensusTransactionIn) returns (stream ConsensusTransactionOut) {}
 }